server:
  port: 8081
##  context-path: /dock
spring:
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  mail:
    protocol: smtps
    host: smtp.163.com
    username: ${email}
    password: ${email_token}
    default-encoding: UTF-8



  datasource:
    hikari:
      # 连接池最大连接数，默认是 10
      maximum-pool-size: 60
      # 链接超时时间，默认 30000(30 秒)
      connection-timeout: 70000
      # 连接将被测试活动的最大时间量
      validation-timeout: 3000
      # 此属性控制池中连接的最长生命周期，值 0 表示无限生命周期，默认 1800000(30 分钟)
      max-lifetime: 600000
      # 连接到数据库时等待的最长时间(秒)
      login-timeout: 5
      # 池中维护的最小空闲连接数
      minimum-idle: 10
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${mysql_url}
    username: ${mysql_username}
    password: ${mysql_password}
    datasourcetype: com.alibaba.druid.pool.DruidDataSource



logging:
  level:
    com:
      egzosn: debug
  file: examples.log

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  global-config:
    db-config:
      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: auto
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
    call-setters-on-nulls: true

app:
  url: http://localhost:8081
file:
  uploadPath: images/
  directoryMapping: /xechat/
  staticAccessPath: /**
  accessAddress: http://localhost:8081/images/
chatrecord:
  path: ${chatrecord_path}
  accessAddress: http://localhost:8081/chatrecord/
  password: ${chatrecord_password}

restTemplate:
  threadSize: 20
  waitingTime: 500
  connectTimeOut: 10000
  readTimeOut: 10000
turing:
  apiUrl: http://openapi.tuling123.com/openapi/api/v2
  apiKey:

rsa:
  publicKey: ${ras_publicKey}
  privateKey: ${ras_privateKeyKey}

kuaidi100:
  key: ${kuaidi100_key}
  customer: ${kuaidi100_customer}














